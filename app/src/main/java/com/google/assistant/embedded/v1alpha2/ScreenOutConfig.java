// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/assistant/embedded/v1alpha2/embedded_assistant.proto

package com.google.assistant.embedded.v1alpha2;

/**
 * <pre>
 * Specifies the desired format for the server to use when it returns
 * `screen_out` response.
 * </pre>
 *
 * Protobuf type {@code google.assistant.embedded.v1alpha2.ScreenOutConfig}
 */
public  final class ScreenOutConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.assistant.embedded.v1alpha2.ScreenOutConfig)
    ScreenOutConfigOrBuilder {
  // Use ScreenOutConfig.newBuilder() to construct.
  private ScreenOutConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ScreenOutConfig() {
    screenMode_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ScreenOutConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();

            screenMode_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.assistant.embedded.v1alpha2.AssistantProto.internal_static_google_assistant_embedded_v1alpha2_ScreenOutConfig_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.assistant.embedded.v1alpha2.AssistantProto.internal_static_google_assistant_embedded_v1alpha2_ScreenOutConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.assistant.embedded.v1alpha2.ScreenOutConfig.class, com.google.assistant.embedded.v1alpha2.ScreenOutConfig.Builder.class);
  }

  /**
   * <pre>
   * Possible modes for visual screen-output on the device.
   * </pre>
   *
   * Protobuf enum {@code google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode}
   */
  public enum ScreenMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No video mode specified.
     * The Assistant may respond as if in `OFF` mode.
     * </pre>
     *
     * <code>SCREEN_MODE_UNSPECIFIED = 0;</code>
     */
    SCREEN_MODE_UNSPECIFIED(0),
    /**
     * <pre>
     * Screen is off (or has brightness or other settings set so low it is
     * not visible). The Assistant will typically not return a screen response
     * in this mode.
     * </pre>
     *
     * <code>OFF = 1;</code>
     */
    OFF(1),
    /**
     * <pre>
     * The Assistant will typically return a partial-screen response in this
     * mode.
     * </pre>
     *
     * <code>PLAYING = 3;</code>
     */
    PLAYING(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No video mode specified.
     * The Assistant may respond as if in `OFF` mode.
     * </pre>
     *
     * <code>SCREEN_MODE_UNSPECIFIED = 0;</code>
     */
    public static final int SCREEN_MODE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Screen is off (or has brightness or other settings set so low it is
     * not visible). The Assistant will typically not return a screen response
     * in this mode.
     * </pre>
     *
     * <code>OFF = 1;</code>
     */
    public static final int OFF_VALUE = 1;
    /**
     * <pre>
     * The Assistant will typically return a partial-screen response in this
     * mode.
     * </pre>
     *
     * <code>PLAYING = 3;</code>
     */
    public static final int PLAYING_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ScreenMode valueOf(int value) {
      return forNumber(value);
    }

    public static ScreenMode forNumber(int value) {
      switch (value) {
        case 0: return SCREEN_MODE_UNSPECIFIED;
        case 1: return OFF;
        case 3: return PLAYING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ScreenMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ScreenMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ScreenMode>() {
            public ScreenMode findValueByNumber(int number) {
              return ScreenMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.assistant.embedded.v1alpha2.ScreenOutConfig.getDescriptor().getEnumTypes().get(0);
    }

    private static final ScreenMode[] VALUES = values();

    public static ScreenMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ScreenMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode)
  }

  public static final int SCREEN_MODE_FIELD_NUMBER = 1;
  private int screenMode_;
  /**
   * <pre>
   * Current visual screen-mode for the device while issuing the query.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode screen_mode = 1;</code>
   */
  public int getScreenModeValue() {
    return screenMode_;
  }
  /**
   * <pre>
   * Current visual screen-mode for the device while issuing the query.
   * </pre>
   *
   * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode screen_mode = 1;</code>
   */
  public com.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode getScreenMode() {
    com.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode result = com.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode.valueOf(screenMode_);
    return result == null ? com.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (screenMode_ != com.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode.SCREEN_MODE_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, screenMode_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (screenMode_ != com.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode.SCREEN_MODE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, screenMode_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.assistant.embedded.v1alpha2.ScreenOutConfig)) {
      return super.equals(obj);
    }
    com.google.assistant.embedded.v1alpha2.ScreenOutConfig other = (com.google.assistant.embedded.v1alpha2.ScreenOutConfig) obj;

    boolean result = true;
    result = result && screenMode_ == other.screenMode_;
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + SCREEN_MODE_FIELD_NUMBER;
    hash = (53 * hash) + screenMode_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.assistant.embedded.v1alpha2.ScreenOutConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.assistant.embedded.v1alpha2.ScreenOutConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.assistant.embedded.v1alpha2.ScreenOutConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.assistant.embedded.v1alpha2.ScreenOutConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.assistant.embedded.v1alpha2.ScreenOutConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.assistant.embedded.v1alpha2.ScreenOutConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.assistant.embedded.v1alpha2.ScreenOutConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.assistant.embedded.v1alpha2.ScreenOutConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.assistant.embedded.v1alpha2.ScreenOutConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.assistant.embedded.v1alpha2.ScreenOutConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.assistant.embedded.v1alpha2.ScreenOutConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies the desired format for the server to use when it returns
   * `screen_out` response.
   * </pre>
   *
   * Protobuf type {@code google.assistant.embedded.v1alpha2.ScreenOutConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.assistant.embedded.v1alpha2.ScreenOutConfig)
      com.google.assistant.embedded.v1alpha2.ScreenOutConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.assistant.embedded.v1alpha2.AssistantProto.internal_static_google_assistant_embedded_v1alpha2_ScreenOutConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.assistant.embedded.v1alpha2.AssistantProto.internal_static_google_assistant_embedded_v1alpha2_ScreenOutConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.assistant.embedded.v1alpha2.ScreenOutConfig.class, com.google.assistant.embedded.v1alpha2.ScreenOutConfig.Builder.class);
    }

    // Construct using com.google.assistant.embedded.v1alpha2.ScreenOutConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      screenMode_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.assistant.embedded.v1alpha2.AssistantProto.internal_static_google_assistant_embedded_v1alpha2_ScreenOutConfig_descriptor;
    }

    public com.google.assistant.embedded.v1alpha2.ScreenOutConfig getDefaultInstanceForType() {
      return com.google.assistant.embedded.v1alpha2.ScreenOutConfig.getDefaultInstance();
    }

    public com.google.assistant.embedded.v1alpha2.ScreenOutConfig build() {
      com.google.assistant.embedded.v1alpha2.ScreenOutConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.assistant.embedded.v1alpha2.ScreenOutConfig buildPartial() {
      com.google.assistant.embedded.v1alpha2.ScreenOutConfig result = new com.google.assistant.embedded.v1alpha2.ScreenOutConfig(this);
      result.screenMode_ = screenMode_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.assistant.embedded.v1alpha2.ScreenOutConfig) {
        return mergeFrom((com.google.assistant.embedded.v1alpha2.ScreenOutConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.assistant.embedded.v1alpha2.ScreenOutConfig other) {
      if (other == com.google.assistant.embedded.v1alpha2.ScreenOutConfig.getDefaultInstance()) return this;
      if (other.screenMode_ != 0) {
        setScreenModeValue(other.getScreenModeValue());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.assistant.embedded.v1alpha2.ScreenOutConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.assistant.embedded.v1alpha2.ScreenOutConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int screenMode_ = 0;
    /**
     * <pre>
     * Current visual screen-mode for the device while issuing the query.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode screen_mode = 1;</code>
     */
    public int getScreenModeValue() {
      return screenMode_;
    }
    /**
     * <pre>
     * Current visual screen-mode for the device while issuing the query.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode screen_mode = 1;</code>
     */
    public Builder setScreenModeValue(int value) {
      screenMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Current visual screen-mode for the device while issuing the query.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode screen_mode = 1;</code>
     */
    public com.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode getScreenMode() {
      com.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode result = com.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode.valueOf(screenMode_);
      return result == null ? com.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Current visual screen-mode for the device while issuing the query.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode screen_mode = 1;</code>
     */
    public Builder setScreenMode(com.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      screenMode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Current visual screen-mode for the device while issuing the query.
     * </pre>
     *
     * <code>optional .google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode screen_mode = 1;</code>
     */
    public Builder clearScreenMode() {
      
      screenMode_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  }

  // @@protoc_insertion_point(class_scope:google.assistant.embedded.v1alpha2.ScreenOutConfig)
  private static final com.google.assistant.embedded.v1alpha2.ScreenOutConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.assistant.embedded.v1alpha2.ScreenOutConfig();
  }

  public static com.google.assistant.embedded.v1alpha2.ScreenOutConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ScreenOutConfig>
      PARSER = new com.google.protobuf.AbstractParser<ScreenOutConfig>() {
    public ScreenOutConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new ScreenOutConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ScreenOutConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ScreenOutConfig> getParserForType() {
    return PARSER;
  }

  public com.google.assistant.embedded.v1alpha2.ScreenOutConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

